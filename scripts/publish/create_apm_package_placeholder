#!/usr/bin/env python

# Copyright (c) 2015-present, Facebook, Inc.
# All rights reserved.
#
# This source code is licensed under the license found in the LICENSE file in
# the root directory of this source tree.

# This is designed to be used for packages whose source code has been exported to GitHub, but have
# not been published to apm yet. This establishes a placeholder for the package in apm so that the
# name cannot be claimed by someone else. The true implementation of the package will be published
# whenever the next Nuclide release happens.

# Set up the logging early on in the process.
import logging
logging.basicConfig(level=logging.INFO, format='%(message)s')

# Do other ordinary imports.
import os
import sys

# Add the lib/ directory to $PYTHONPATH so library code can be imported.
sys.path.append(os.path.join(os.path.dirname(__file__), '../lib'))

# Parse the command-line arguments.
import optparse
parser = optparse.OptionParser(usage='usage: %prog [options] <path_to_package_json>',
                               description='Creates a placeholder apm package for the package ' +
                                           'defined in the specified package.json.')

parser.add_option('--access-token', '-a', metavar='TOKEN',
                  help='A GitHub access token with sufficient rights to create new apm repos.')
options, args = parser.parse_args(sys.argv[1:])

if len(args) != 1:
    print('Exactly one argument must be specified for the path to the package.json, but was: %s' %
            args)
    sys.exit(1)

from git import Git
from publishers.apm_repository_helper import ApmRepositoryHelper
from publishers.create_apm_package_placeholder import create_placeholder

git = Git()
apm_repository_helper = ApmRepositoryHelper(git, options.access_token)
path_to_package_json = args[0]

is_success = create_placeholder(path_to_package_json, apm_repository_helper)
if not is_success:
    print('Failed to publish package at %s to apm.' % path_to_package_json)
    sys.exit(1)
