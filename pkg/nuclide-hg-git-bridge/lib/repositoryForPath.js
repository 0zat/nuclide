var _nuclideCommons = require('../../nuclide-commons');

/**
 * @param aPath The NuclideUri of a file or directory for which you want to find
 *   a Repository it belongs to.
 * @return A Git or Hg repository the path belongs to, if any.
 */

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

function repositoryForPath(aPath) {
  // Calling atom.project.repositoryForDirectory gets the real path of the directory,
  // which requires a round-trip to the server for remote paths.
  // Instead, this function keeps filtering local.
  var repositoryContainsPath = require('./repositoryContainsPath');
  var repositories = _nuclideCommons.array.compact(atom.project.getRepositories());
  return repositories.find(function (repo) {
    try {
      return repositoryContainsPath(repo, aPath);
    } catch (e) {
      // The repo type is not supported.
      return false;
    }
  });
}

module.exports = repositoryForPath;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcG9zaXRvcnlGb3JQYXRoLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI4QkFZb0IsdUJBQXVCOzs7Ozs7Ozs7Ozs7Ozs7O0FBTzNDLFNBQVMsaUJBQWlCLENBQUMsS0FBaUIsRUFBb0I7Ozs7QUFJOUQsTUFBTSxzQkFBc0IsR0FBRyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUNuRSxNQUFNLFlBQVksR0FBRyxzQkFBTSxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDO0FBQ25FLFNBQU8sWUFBWSxDQUFDLElBQUksQ0FDdEIsVUFBQSxJQUFJLEVBQUk7QUFDTixRQUFJO0FBQ0YsYUFBTyxzQkFBc0IsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDNUMsQ0FBQyxPQUFPLENBQUMsRUFBRTs7QUFFVixhQUFPLEtBQUssQ0FBQztLQUNkO0dBQ0YsQ0FDRixDQUFDO0NBQ0g7O0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxpQkFBaUIsQ0FBQyIsImZpbGUiOiJyZXBvc2l0b3J5Rm9yUGF0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuLyogQGZsb3cgKi9cblxuLypcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgaW5cbiAqIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCB0eXBlIHtOdWNsaWRlVXJpfSBmcm9tICcuLi8uLi9udWNsaWRlLXJlbW90ZS11cmknO1xuaW1wb3J0IHthcnJheX0gZnJvbSAnLi4vLi4vbnVjbGlkZS1jb21tb25zJztcblxuLyoqXG4gKiBAcGFyYW0gYVBhdGggVGhlIE51Y2xpZGVVcmkgb2YgYSBmaWxlIG9yIGRpcmVjdG9yeSBmb3Igd2hpY2ggeW91IHdhbnQgdG8gZmluZFxuICogICBhIFJlcG9zaXRvcnkgaXQgYmVsb25ncyB0by5cbiAqIEByZXR1cm4gQSBHaXQgb3IgSGcgcmVwb3NpdG9yeSB0aGUgcGF0aCBiZWxvbmdzIHRvLCBpZiBhbnkuXG4gKi9cbmZ1bmN0aW9uIHJlcG9zaXRvcnlGb3JQYXRoKGFQYXRoOiBOdWNsaWRlVXJpKTogP2F0b20kUmVwb3NpdG9yeSB7XG4gIC8vIENhbGxpbmcgYXRvbS5wcm9qZWN0LnJlcG9zaXRvcnlGb3JEaXJlY3RvcnkgZ2V0cyB0aGUgcmVhbCBwYXRoIG9mIHRoZSBkaXJlY3RvcnksXG4gIC8vIHdoaWNoIHJlcXVpcmVzIGEgcm91bmQtdHJpcCB0byB0aGUgc2VydmVyIGZvciByZW1vdGUgcGF0aHMuXG4gIC8vIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24ga2VlcHMgZmlsdGVyaW5nIGxvY2FsLlxuICBjb25zdCByZXBvc2l0b3J5Q29udGFpbnNQYXRoID0gcmVxdWlyZSgnLi9yZXBvc2l0b3J5Q29udGFpbnNQYXRoJyk7XG4gIGNvbnN0IHJlcG9zaXRvcmllcyA9IGFycmF5LmNvbXBhY3QoYXRvbS5wcm9qZWN0LmdldFJlcG9zaXRvcmllcygpKTtcbiAgcmV0dXJuIHJlcG9zaXRvcmllcy5maW5kKFxuICAgIHJlcG8gPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHJlcG9zaXRvcnlDb250YWluc1BhdGgocmVwbywgYVBhdGgpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBUaGUgcmVwbyB0eXBlIGlzIG5vdCBzdXBwb3J0ZWQuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuICApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcG9zaXRvcnlGb3JQYXRoO1xuIl19