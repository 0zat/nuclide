"use babel";
import { Observable } from "rxjs";
import { trackTiming } from "../../nuclide-analytics";

module.exports = _client => {
  const remoteModule = {};

  remoteModule.UnionFunc = function (arg0, arg1) {
    return _client.marshalArguments(Array.from(arguments), [{
      name: "s",
      type: {
        location: {
          type: "source",
          fileName: "UnionTypes.def",
          line: 6
        },
        kind: "named",
        name: "SSU"
      }
    }, {
      name: "m",
      type: {
        location: {
          type: "source",
          fileName: "UnionTypes.def",
          line: 6
        },
        kind: "named",
        name: "MixedUnion"
      }
    }]).then(args => _client.callRemoteFunction("UnionTypes/UnionFunc", "void", args));
  }

  remoteModule.ObjectUnionFunc = function (arg0) {
    return _client.marshalArguments(Array.from(arguments), [{
      name: "loc",
      type: {
        location: {
          type: "source",
          fileName: "UnionTypes.def",
          line: 20
        },
        kind: "named",
        name: "Location"
      }
    }]).then(args => _client.callRemoteFunction("UnionTypes/ObjectUnionFunc", "void", args));
  }

  remoteModule.TypeFunc = function (arg0) {
    return _client.marshalArguments(Array.from(arguments), [{
      name: "type",
      type: {
        location: {
          type: "source",
          fileName: "UnionTypes.def",
          line: 111
        },
        kind: "named",
        name: "Type"
      }
    }]).then(args => _client.callRemoteFunction("UnionTypes/TypeFunc", "void", args));
  }

  remoteModule.MDUFunc = function (arg0) {
    return _client.marshalArguments(Array.from(arguments), [{
      name: "mdu",
      type: {
        location: {
          type: "source",
          fileName: "UnionTypes.def",
          line: 116
        },
        kind: "named",
        name: "MultipleDiscriminantUnion"
      }
    }]).then(args => _client.callRemoteFunction("UnionTypes/MDUFunc", "void", args));
  }

  return remoteModule;
}