"use strict";

let Observable, trackOperationTiming;

module.exports = _client => {
  const remoteModule = {};

  remoteModule.LiteralFunc = function (arg0, arg1, arg2) {
    return _client.marshalArguments(Array.from(arguments), [{
      name: "s",
      type: {
        location: {
          type: "source",
          fileName: "LiteralTypes.def",
          line: 5
        },
        kind: "string-literal",
        value: "v"
      }
    }, {
      name: "n",
      type: {
        location: {
          type: "source",
          fileName: "LiteralTypes.def",
          line: 5
        },
        kind: "number-literal",
        value: 42
      }
    }, {
      name: "b",
      type: {
        location: {
          type: "source",
          fileName: "LiteralTypes.def",
          line: 5
        },
        kind: "boolean-literal",
        value: true
      }
    }]).then(args => _client.callRemoteFunction("LiteralTypes/LiteralFunc", "void", args));
  }

  return remoteModule;
};

Object.defineProperty(module.exports, "inject", {
  value: function () {
    Observable = arguments[0];
    trackOperationTiming = arguments[1];
  }
});