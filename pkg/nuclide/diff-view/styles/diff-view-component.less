@import 'ui-variables';
@import 'syntax-variables';
@import 'octicon-utf-codes';

.nuclide-diff-view-component {
  height: 100%;
  width: 100%;
  /* Let the `<atom-pane-container>` fill the height since it already has `flex: 1` applied. */
  display: flex;

  .nuclide-diff-view-tree {
    -webkit-user-select: none;
    white-space: nowrap;
    padding-left: 10px;
    padding-right: 10px;
    overflow: auto;

    // Fill vertical and horizontal space if tree is smaller than panel.
    min-width: 100%;
    min-height: 100%;

    // Allow block to extend past parent's width, for autoresizing purposes.
    display: inline-block;

    background-color: @tree-view-background-color;

    &:focus {
      background-color: contrast(
        @text-color,
        darken(@tree-view-background-color, 2%),
        lighten(@tree-view-background-color, 5%),
        25%);
    }
  }
}

.diff-view-count {
  color: @text-color;
  font-size: 0.8em;
  min-width: 2em;
  position: absolute;
  right: 0;
  top: 13px;
  text-shadow: 0 0px 2px @base-border-color;
  text-align: center;
}

.tool-bar-btn.icon-git-branch {
  position: relative;

  &.positive-count {
    color: @text-color-warning;
    &:hover {
      color: @text-color-warning;
    }
    .diff-view-count {
      color: @text-color-warning;
    }
  }
}

// Default colors for themes that do not specify any.
@success-color: #0c0;
@success-color: @text-color-success;

@error-color: #c00;
@error-color: @text-color-error;

@backgroundLuma: luma(@syntax-background-color);
@lumaThreshold: 50%;
@blendAmount: 40%;

atom-text-editor, atom-text-editor::shadow {

  // `screen` works well for dark themes,
  // `multiply` works well for light themes

  .diff-view-insert .region {
    @success-color-faded: fade(@success-color, @blendAmount);
    & when (@backgroundLuma <= @lumaThreshold) {
      background-color: screen(@syntax-background-color, @success-color-faded);
    }
    & when (@backgroundLuma > @lumaThreshold) {
      background-color: multiply(@syntax-background-color, @success-color-faded);
    }
  }

  .diff-view-delete .region {
    @error-color-faded: fade(@error-color, @blendAmount);
    & when (@backgroundLuma <= @lumaThreshold) {
      background-color: screen(@syntax-background-color, @error-color-faded);
    }
    & when (@backgroundLuma > @lumaThreshold) {
      background-color: multiply(@syntax-background-color, @error-color-faded);
    }
  }

}
