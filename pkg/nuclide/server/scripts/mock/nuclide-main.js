

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var https = require('https');
var http = require('http');
var fs = require('fs');
var path = require('path');
var url = require('url');

var version = undefined;

function processArgs() {
  var args = process.argv.slice(2);
  var processedArgs = {};

  args.forEach(function (argument, index) {
    if (index % 2 !== 0) {
      processedArgs[args[index - 1].slice(2)] = argument;
    }
  });
  return processedArgs;
}

function startServer(args) {
  var _webServer = undefined;
  if (args.key && args.cert && args.ca) {
    var webServerOptions = {
      key: fs.readFileSync(args.key),
      cert: fs.readFileSync(args.cert),
      ca: fs.readFileSync(args.ca),
      requestCert: true,
      rejectUnauthorized: true
    };

    // $FlowIssue https://github.com/facebook/flow/issues/1137
    _webServer = https.createServer(webServerOptions, handleRequest);
    console.log('running in secure mode'); //eslint-disable-line no-console
  } else {
      _webServer = http.createServer(handleRequest);
    }

  _webServer.on('listening', function () {
    console.log('listening on port ' + args.port); //eslint-disable-line no-console
  });

  _webServer.listen(args.port || 8084, '::');
}

function handleRequest(request, response) {
  var pathname = url.parse(request.url, false).pathname;

  switch (pathname) {
    case '/heartbeat':
      handleVersion(request, response);
      break;
    default:
      response.writeHead(500);
      response.write('This mock server does not understand that command');
      response.end();
      break;
  }
}

function handleVersion(request, response) {
  response.writeHead(200);
  response.write(version);
  response.end();
}

// Set the initial version by reading from the file.
try {
  var json = JSON.parse(fs.readFileSync(path.resolve(__dirname, 'version.json'), 'utf8'));
  version = json.Version.toString();
} catch (e) {
  version = 'test-version';
}
startServer(processArgs());
//# sourceMappingURL=data:application/json;base64,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QUFhLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRTtBQUN4QyxVQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLFVBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDeEIsVUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO0NBQ2hCOzs7QUFHRCxJQUFJO0FBQ0YsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDMUYsU0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7Q0FDbkMsQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUNWLFNBQU8sR0FBRyxjQUFjLENBQUM7Q0FDMUI7QUFDRCxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyIsImZpbGUiOiJudWNsaWRlLW1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJyk7XG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHVybCA9IHJlcXVpcmUoJ3VybCcpO1xuXG5sZXQgdmVyc2lvbjtcblxuZnVuY3Rpb24gcHJvY2Vzc0FyZ3MoKSB7XG4gIGNvbnN0IGFyZ3MgPSBwcm9jZXNzLmFyZ3Yuc2xpY2UoMik7XG4gIGNvbnN0IHByb2Nlc3NlZEFyZ3MgPSB7fTtcblxuICBhcmdzLmZvckVhY2goZnVuY3Rpb24gKGFyZ3VtZW50LCBpbmRleCkge1xuICAgIGlmIChpbmRleCAlIDIgIT09IDApIHtcbiAgICAgIHByb2Nlc3NlZEFyZ3NbYXJnc1tpbmRleCAtIDFdLnNsaWNlKDIpXSA9IGFyZ3VtZW50O1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBwcm9jZXNzZWRBcmdzO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlcnZlcihhcmdzKSB7XG4gIGxldCBfd2ViU2VydmVyO1xuICBpZiAoYXJncy5rZXkgJiYgYXJncy5jZXJ0ICYmIGFyZ3MuY2EpIHtcbiAgICBjb25zdCB3ZWJTZXJ2ZXJPcHRpb25zID0ge1xuICAgICAga2V5OiBmcy5yZWFkRmlsZVN5bmMoYXJncy5rZXkpLFxuICAgICAgY2VydDogZnMucmVhZEZpbGVTeW5jKGFyZ3MuY2VydCksXG4gICAgICBjYTogZnMucmVhZEZpbGVTeW5jKGFyZ3MuY2EpLFxuICAgICAgcmVxdWVzdENlcnQ6IHRydWUsXG4gICAgICByZWplY3RVbmF1dGhvcml6ZWQ6IHRydWUsXG4gICAgfTtcblxuICAgIC8vICRGbG93SXNzdWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2Zsb3cvaXNzdWVzLzExMzdcbiAgICBfd2ViU2VydmVyID0gaHR0cHMuY3JlYXRlU2VydmVyKHdlYlNlcnZlck9wdGlvbnMsIGhhbmRsZVJlcXVlc3QpO1xuICAgIGNvbnNvbGUubG9nKCdydW5uaW5nIGluIHNlY3VyZSBtb2RlJyk7IC8vZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gIH0gZWxzZSB7XG4gICAgX3dlYlNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGhhbmRsZVJlcXVlc3QpO1xuICB9XG5cbiAgX3dlYlNlcnZlci5vbignbGlzdGVuaW5nJywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnNvbGUubG9nKCdsaXN0ZW5pbmcgb24gcG9ydCAnICsgYXJncy5wb3J0KTsgLy9lc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgfSk7XG5cbiAgX3dlYlNlcnZlci5saXN0ZW4oYXJncy5wb3J0IHx8IDgwODQsICc6OicpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVSZXF1ZXN0KHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIGNvbnN0IHBhdGhuYW1lID0gdXJsLnBhcnNlKHJlcXVlc3QudXJsLCBmYWxzZSkucGF0aG5hbWU7XG5cbiAgc3dpdGNoIChwYXRobmFtZSkge1xuICAgIGNhc2UgJy9oZWFydGJlYXQnOlxuICAgICAgaGFuZGxlVmVyc2lvbihyZXF1ZXN0LCByZXNwb25zZSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVzcG9uc2Uud3JpdGVIZWFkKDUwMCk7XG4gICAgICByZXNwb25zZS53cml0ZSgnVGhpcyBtb2NrIHNlcnZlciBkb2VzIG5vdCB1bmRlcnN0YW5kIHRoYXQgY29tbWFuZCcpO1xuICAgICAgcmVzcG9uc2UuZW5kKCk7XG4gICAgICBicmVhaztcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIGhhbmRsZVZlcnNpb24ocmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgcmVzcG9uc2Uud3JpdGVIZWFkKDIwMCk7XG4gIHJlc3BvbnNlLndyaXRlKHZlcnNpb24pO1xuICByZXNwb25zZS5lbmQoKTtcbn1cblxuLy8gU2V0IHRoZSBpbml0aWFsIHZlcnNpb24gYnkgcmVhZGluZyBmcm9tIHRoZSBmaWxlLlxudHJ5IHtcbiAgY29uc3QganNvbiA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICd2ZXJzaW9uLmpzb24nKSwgJ3V0ZjgnKSk7XG4gIHZlcnNpb24gPSBqc29uLlZlcnNpb24udG9TdHJpbmcoKTtcbn0gY2F0Y2ggKGUpIHtcbiAgdmVyc2lvbiA9ICd0ZXN0LXZlcnNpb24nO1xufVxuc3RhcnRTZXJ2ZXIocHJvY2Vzc0FyZ3MoKSk7XG4iXX0=