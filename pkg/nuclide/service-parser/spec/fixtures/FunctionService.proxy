"use babel";
import { Observable } from "rx";
import { trackTiming } from "nuclide-analytics";

module.exports = _client => {
  remoteModule = {}

  remoteModule.TestFunctionA = function (arg0, arg1) {
    return Promise.all([_client.marshal(arg0, {
      kind: "string"
    }), _client.marshal(arg1, {
      kind: "boolean"
    })]).then(args => _client.callRemoteFunction("TestFunctionA", "promise", args)).then(value => _client.unmarshal(value, {
      kind: "array",
      type: {
        kind: "string"
      }
    }));
  }

  remoteModule.TestFunctionB = function () {
    return Observable.concat().toArray().concatMap(args => _client.callRemoteFunction("TestFunctionB", "observable", args)).concatMap(value => _client.unmarshal(value, {
      kind: "number"
    }));
  }

  remoteModule.TestFunctionC = function () {
    return Promise.all([]).then(args => _client.callRemoteFunction("TestFunctionC", "void", args));
  }

  return remoteModule;
}