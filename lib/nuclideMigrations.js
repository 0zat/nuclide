

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 */

var PACKAGE_PREFIX_REGEXP = /^(nuclide|fb)-/;

function migrateConfig() {
  var allUserConfigs = atom.config.getRawValue(null, {
    sources: atom.config.getUserConfigPath()
  });

  // Migrate only if user config exists and is a non-null Object. Anything else is outside what the
  // migration is able to handle.
  if (typeof allUserConfigs !== 'object' || allUserConfigs == null) {
    return;
  }

  Object.keys(allUserConfigs).forEach(function (k) {
    if (PACKAGE_PREFIX_REGEXP.test(k)) {
      var newConfig = atom.config.get('nuclide');

      if (typeof newConfig !== 'object' || newConfig == null) {
        // If no 'nuclide' config has been set yet, initialize it with an empty object so it can
        // be populated with the old settings.
        newConfig = {};
      }

      newConfig[k] = allUserConfigs[k];
      atom.config.setRawValue('nuclide', newConfig);

      // Remove old setting so it is not migrated again.
      atom.config.unset(k);
    }
  });

  // Remove obsolete remote-projects setting
  atom.config.unset('nuclide.remoteProjectsConfig');
}

module.exports = {
  migrateConfig: migrateConfig
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm51Y2xpZGVNaWdyYXRpb25zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFXQSxJQUFNLHFCQUFxQixHQUFHLGdCQUFnQixDQUFDOztBQUUvQyxTQUFTLGFBQWEsR0FBUztBQUM3QixNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUU7QUFDbkQsV0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUU7R0FDekMsQ0FBQyxDQUFDOzs7O0FBSUgsTUFBSSxPQUFPLGNBQWMsS0FBSyxRQUFRLElBQUksY0FBYyxJQUFJLElBQUksRUFBRTtBQUNoRSxXQUFPO0dBQ1I7O0FBRUQsUUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBUyxDQUFDLEVBQUU7QUFDOUMsUUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDakMsVUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7O0FBRTNDLFVBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxJQUFJLFNBQVMsSUFBSSxJQUFJLEVBQUU7OztBQUd0RCxpQkFBUyxHQUFHLEVBQUUsQ0FBQztPQUNoQjs7QUFFRCxlQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLFVBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQzs7O0FBRzlDLFVBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3RCO0dBQ0YsQ0FBQyxDQUFDOzs7QUFHSCxNQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0NBQ25EOztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUc7QUFDZixlQUFhLEVBQWIsYUFBYTtDQUNkLENBQUMiLCJmaWxlIjoibnVjbGlkZU1pZ3JhdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcbi8qIEBmbG93ICovXG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGluXG4gKiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBQQUNLQUdFX1BSRUZJWF9SRUdFWFAgPSAvXihudWNsaWRlfGZiKS0vO1xuXG5mdW5jdGlvbiBtaWdyYXRlQ29uZmlnKCk6IHZvaWQge1xuICBjb25zdCBhbGxVc2VyQ29uZmlncyA9IGF0b20uY29uZmlnLmdldFJhd1ZhbHVlKG51bGwsIHtcbiAgICBzb3VyY2VzOiBhdG9tLmNvbmZpZy5nZXRVc2VyQ29uZmlnUGF0aCgpLFxuICB9KTtcblxuICAvLyBNaWdyYXRlIG9ubHkgaWYgdXNlciBjb25maWcgZXhpc3RzIGFuZCBpcyBhIG5vbi1udWxsIE9iamVjdC4gQW55dGhpbmcgZWxzZSBpcyBvdXRzaWRlIHdoYXQgdGhlXG4gIC8vIG1pZ3JhdGlvbiBpcyBhYmxlIHRvIGhhbmRsZS5cbiAgaWYgKHR5cGVvZiBhbGxVc2VyQ29uZmlncyAhPT0gJ29iamVjdCcgfHwgYWxsVXNlckNvbmZpZ3MgPT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIE9iamVjdC5rZXlzKGFsbFVzZXJDb25maWdzKS5mb3JFYWNoKGZ1bmN0aW9uKGspIHtcbiAgICBpZiAoUEFDS0FHRV9QUkVGSVhfUkVHRVhQLnRlc3QoaykpIHtcbiAgICAgIGxldCBuZXdDb25maWcgPSBhdG9tLmNvbmZpZy5nZXQoJ251Y2xpZGUnKTtcblxuICAgICAgaWYgKHR5cGVvZiBuZXdDb25maWcgIT09ICdvYmplY3QnIHx8IG5ld0NvbmZpZyA9PSBudWxsKSB7XG4gICAgICAgIC8vIElmIG5vICdudWNsaWRlJyBjb25maWcgaGFzIGJlZW4gc2V0IHlldCwgaW5pdGlhbGl6ZSBpdCB3aXRoIGFuIGVtcHR5IG9iamVjdCBzbyBpdCBjYW5cbiAgICAgICAgLy8gYmUgcG9wdWxhdGVkIHdpdGggdGhlIG9sZCBzZXR0aW5ncy5cbiAgICAgICAgbmV3Q29uZmlnID0ge307XG4gICAgICB9XG5cbiAgICAgIG5ld0NvbmZpZ1trXSA9IGFsbFVzZXJDb25maWdzW2tdO1xuICAgICAgYXRvbS5jb25maWcuc2V0UmF3VmFsdWUoJ251Y2xpZGUnLCBuZXdDb25maWcpO1xuXG4gICAgICAvLyBSZW1vdmUgb2xkIHNldHRpbmcgc28gaXQgaXMgbm90IG1pZ3JhdGVkIGFnYWluLlxuICAgICAgYXRvbS5jb25maWcudW5zZXQoayk7XG4gICAgfVxuICB9KTtcblxuICAvLyBSZW1vdmUgb2Jzb2xldGUgcmVtb3RlLXByb2plY3RzIHNldHRpbmdcbiAgYXRvbS5jb25maWcudW5zZXQoJ251Y2xpZGUucmVtb3RlUHJvamVjdHNDb25maWcnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG1pZ3JhdGVDb25maWcsXG59O1xuIl19